{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, Suspense } from \"react\";\nimport { signIn, getSession } from \"next-auth/react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport BackgroundReel from \"@/app/components/BackgroundReel\";\nimport Link from \"next/link\";\n\nfunction LoginContent() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const redirectUrl = searchParams.get('redirect');\n  const time = searchParams.get('time');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      // First, check credentials and email verification status with our API\n      const loginResponse = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const loginData = await loginResponse.json();\n\n      if (!loginResponse.ok) {\n        // Handle specific error messages from our API\n        if (loginResponse.status === 403 && loginData.requiresVerification) {\n          setError(\"Please verify your email address before logging in. Check your email for a verification link.\");\n        } else if (loginResponse.status === 401) {\n          setError(\"Invalid email or password\");\n        } else {\n          setError(loginData.message || \"Login failed\");\n        }\n        setIsLoading(false);\n        return;\n      }\n\n      // If credentials are valid and email is verified, proceed with NextAuth\n      const result = await signIn(\"credentials\", {\n        email,\n        password,\n        redirect: false,\n      });\n\n      if (result?.error) {\n        setError(\"Authentication failed. Please try again.\");\n      } else {\n        // Refresh session to get updated user data\n        await getSession();\n        \n        // Redirect to the intended page if provided\n        if (redirectUrl) {\n          const finalUrl = time ? `${redirectUrl}?time=${encodeURIComponent(time)}` : redirectUrl;\n          router.push(finalUrl);\n        } else {\n          router.push(\"/\");\n        }\n        router.refresh();\n      }\n    } catch (error) {\n      setError(\"An error occurred during login\");\n      console.error(\"Login error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\n            Sign in to your account\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 bg-white rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 bg-white rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-500 text-sm text-center bg-red-100 p-2 rounded\">\n              {error}\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n            >\n              {isLoading ? \"Signing in...\" : \"Sign in\"}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <span className=\"text-gray-300\">Don&apos;t have an account? </span>\n            <Link href=\"/register\" className=\"text-indigo-400 hover:text-indigo-300\">\n              Sign up here\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default function LoginPage() {\n  return (\n    <Suspense fallback={<div className=\"min-h-screen bg-gray-900 flex items-center justify-center text-white\">Loading...</div>}>\n      <LoginContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
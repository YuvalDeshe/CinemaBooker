{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/types/User.ts"],"sourcesContent":["import Card from \"./Card\";\n\nexport const Status = {\n    ACTIVE: \"Active\",\n    INACTIVE: \"Inactive\",\n    SUSPENDED: \"Suspended\"\n}\n\n// TODO: (future deliverable) change User to an Interface with Admin and Customer extending it.\nexport default class User {\n    private fname: string;\n    private lname: string;\n    private phone: string;\n    private email: string;\n    private password: string;\n    private cards: Card[];\n    private address: {street: string, city: string, state: string, zip: string}\n    private promo: boolean;\n    private status: string;\n\n    public constructor(fname: string, lname: string, phone: string, email: string,\n                       password: string, promo: boolean, \n                       address: {street: string, city: string, state: string, zip: string}, cards?: Card[]\n    ) {\n        this.fname = fname;\n        this.lname = lname;\n        this.phone = phone;\n        this.email = email;\n        this.password = password;\n        if (cards !== undefined) { // the user entered a card\n            this.cards = cards;\n        } else this.cards = [];\n        if (address !== undefined) { // the user entered an address\n            this.address = address;    \n        } else this.address = {street: \"\", city: \"\", state: \"\", zip: \"\"};\n        this.promo = promo;\n        this.status = Status.INACTIVE;\n    }\n\n    public getFirstName() {\n        return this.fname;\n    }\n    public setFirstName(name: string) {\n        this.fname = name;\n    }\n\n    public getLastName() {\n        return this.lname;\n    }\n    public setLastName(name: string) {\n        this.lname = name;\n    }\n\n    public getPhoneNumber() {\n        return this.phone;\n    }\n    public setPhoneNumber(number: string) {\n        this.phone = number;\n    }\n\n    public getEmail() {\n        return this.email;\n    }\n    public setEmail(address: string) {\n        this.email = address;\n    }\n\n    public getPassword() {\n        return this.password;\n    }\n    public setPassword(password: string) {\n        this.password = password;\n    }\n\n    public getPromo() {\n        return this.promo;\n    }\n    public setPromo(promo: boolean) {\n        this.promo = promo;\n    }\n\n    public getCards() {\n        return this.cards;\n    }\n    public addCard(card: Card) {\n        if (this.cards.length >= 3) {\n            throw new Error(\"Couldn't add card, user already has too many saved cards.\");\n        } else {\n            this.cards.push(card);\n        }\n    }\n    public removeCard(index: number) {\n        if (index < 0 || index > 2) {\n            throw new Error(\"Invalid index. Index should be an Integer from 0-2.\")\n        }\n        this.cards.splice(index, 1);\n    }\n    public setCards(cards: Card[]) {\n        if (cards.length > 3) {\n            throw new Error(\"Couldn't set cards array. User can only have 3 cards.\");\n        }\n        this.cards = cards;\n    }\n\n    public getAddress() {\n        return this.address;\n    }\n    public setAddress(street: string, city: string, state: string, zip: string) {\n        this.address = {street, city, state, zip};\n    }\n    public getStreet() {\n        return this.address.street;\n    }\n    public setStreet(street: string) {\n        this.address.street = street;\n    }\n    public getCity() {\n        return this.address.city;\n    }\n    public setCity(city: string) {\n        this.address.city = city;\n    }\n    public getState() {\n        return this.address.state;\n    }\n    public setState(state: string) {\n        this.address.state = state;\n    }\n    public getZip() {\n        return this.address.zip;\n    }\n    public setZip(zip: string) {\n        // Accept 5-digit or 5+4 ZIP formats\n        if (!/^\\d{5}(-\\d{4})?$/.test(zip)) {\n            throw new Error(\"Invalid ZIP code format.\");\n        }\n        this.address.zip = zip;\n    }\n\n    public getStatus() {\n        return this.status;\n    }\n    public setStatus(status: string) {\n        if (!Object.values(Status).includes(status)) {\n            throw new Error(`Could not change user status. Status must be one of the following:\\n${Status.ACTIVE}\\n${Status.INACTIVE}\\n${Status.SUSPENDED}`, )\n        }\n        this.status = status;\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/types/Card.ts"],"sourcesContent":["export default class Card {\n    private cardType: string;\n    private cardNumber: string;\n    private expMonth: string;\n    private expYear: string;\n    private billingStreet: string;\n    private billingCity: string;\n    private billingState: string;\n    private billingZip: string;\n\n    public constructor(cardType: string, cardNumber: string, expMonth: string, expYear: string, billingStreet: string,\n        billingCity: string, billingState: string, billingZip: string) {\n        this.cardType = cardType;\n        this.cardNumber = cardNumber;\n        this.expMonth = expMonth;\n        this.expYear = expYear;\n        this.billingStreet = billingStreet;\n        this.billingCity = billingCity;\n        this.billingState = billingState;\n        this.billingZip = billingZip;\n    }\n\n    public getCardType() {\n        return this.cardType;\n    }\n    public setCardType(type: string) {\n        let input = type.toLowerCase();\n        if (input !== 'credit' && input !== 'debit') {\n            throw new Error(\"Couldn't set card. Invalid card type provided.\");\n        } else {\n            this.cardType = input;\n        }\n    }\n\n    public getCardNumber() {\n        return this.cardNumber;\n    }\n    public setCardNumber(number: string) {\n        this.cardNumber = number;\n    }\n\n    public getExpMonth() {\n        return this.expMonth;\n    }\n    public setExpMonth(month: string) {\n        let num = Number(month)\n        if (!Number.isInteger(num) || num < 1 || num > 12) {\n            throw new Error(\"Invalid expiration month. Must be an integer between 1 and 12.\");\n        }\n        this.expMonth = month;\n    }\n\n    public getExpYear() {\n        return this.expYear;\n    }\n    public setExpYear(year: string) {\n        let num = Number(year)\n        const nowYear = new Date().getFullYear();\n        if (!Number.isInteger(num) || num < nowYear) {\n            throw new Error(`Invalid expiration year. Year must not be in the past.`);\n        }\n        this.expYear = year;\n    }\n\n    public getBillingStreet() {\n        return this.billingStreet;\n    }\n    public setBillingStreet(street: string) {\n        this.billingStreet = street;\n    }\n\n    public getBillingCity() {\n        return this.billingCity;\n    }\n    public setBillingCity(city: string) {\n        this.billingCity = city;\n    }\n\n    public getBillingState() {\n        return this.billingState;\n    }\n    public setBillingState(state: string) {\n        this.billingState = state;\n    }\n\n    public getBillingZip() {\n        return this.billingZip;\n    }\n    public setBillingZip(zip: string) {\n        // Accept 5-digit or 5+4 ZIP formats\n        if (!/^\\d{5}(-\\d{4})?$/.test(zip)) {\n            throw new Error(\"Invalid ZIP code format.\");\n        }\n        this.billingZip = zip;\n    }\n\n}\n"],"names":[],"mappings":";;;;;;AAAe,MAAM;IAsBV,cAAc;QACjB,OAAO,IAAI,CAAC,QAAQ;IACxB;IACO,YAAY,IAAY,EAAE;QAC7B,IAAI,QAAQ,KAAK,WAAW;QAC5B,IAAI,UAAU,YAAY,UAAU,SAAS;YACzC,MAAM,IAAI,MAAM;QACpB,OAAO;YACH,IAAI,CAAC,QAAQ,GAAG;QACpB;IACJ;IAEO,gBAAgB;QACnB,OAAO,IAAI,CAAC,UAAU;IAC1B;IACO,cAAc,MAAc,EAAE;QACjC,IAAI,CAAC,UAAU,GAAG;IACtB;IAEO,cAAc;QACjB,OAAO,IAAI,CAAC,QAAQ;IACxB;IACO,YAAY,KAAa,EAAE;QAC9B,IAAI,MAAM,OAAO;QACjB,IAAI,CAAC,OAAO,SAAS,CAAC,QAAQ,MAAM,KAAK,MAAM,IAAI;YAC/C,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,QAAQ,GAAG;IACpB;IAEO,aAAa;QAChB,OAAO,IAAI,CAAC,OAAO;IACvB;IACO,WAAW,IAAY,EAAE;QAC5B,IAAI,MAAM,OAAO;QACjB,MAAM,UAAU,IAAI,OAAO,WAAW;QACtC,IAAI,CAAC,OAAO,SAAS,CAAC,QAAQ,MAAM,SAAS;YACzC,MAAM,IAAI,MAAO;QACrB;QACA,IAAI,CAAC,OAAO,GAAG;IACnB;IAEO,mBAAmB;QACtB,OAAO,IAAI,CAAC,aAAa;IAC7B;IACO,iBAAiB,MAAc,EAAE;QACpC,IAAI,CAAC,aAAa,GAAG;IACzB;IAEO,iBAAiB;QACpB,OAAO,IAAI,CAAC,WAAW;IAC3B;IACO,eAAe,IAAY,EAAE;QAChC,IAAI,CAAC,WAAW,GAAG;IACvB;IAEO,kBAAkB;QACrB,OAAO,IAAI,CAAC,YAAY;IAC5B;IACO,gBAAgB,KAAa,EAAE;QAClC,IAAI,CAAC,YAAY,GAAG;IACxB;IAEO,gBAAgB;QACnB,OAAO,IAAI,CAAC,UAAU;IAC1B;IACO,cAAc,GAAW,EAAE;QAC9B,oCAAoC;QACpC,IAAI,CAAC,mBAAmB,IAAI,CAAC,MAAM;YAC/B,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,UAAU,GAAG;IACtB;IApFA,YAAmB,QAAgB,EAAE,UAAkB,EAAE,QAAgB,EAAE,OAAe,EAAE,aAAqB,EAC7G,WAAmB,EAAE,YAAoB,EAAE,UAAkB,CAAE;QAVnE,mMAAQ,YAAR,KAAA;QACA,mMAAQ,cAAR,KAAA;QACA,mMAAQ,YAAR,KAAA;QACA,mMAAQ,WAAR,KAAA;QACA,mMAAQ,iBAAR,KAAA;QACA,mMAAQ,eAAR,KAAA;QACA,mMAAQ,gBAAR,KAAA;QACA,mMAAQ,cAAR,KAAA;QAII,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,UAAU,GAAG;IACtB;AA4EJ","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/components/RegisterForm.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport User from \"@/types/User\";\nimport Card from \"@/types/Card\";\n\ntype RegisterFormProps = {\n    handleRegister: (user: User) => void\n}\n\nexport default function RegisterForm({ handleRegister }: RegisterFormProps) {\n\n    const [enterCard, setEnterCard] = useState(false);\n    const checkCardBox = () => setEnterCard(!enterCard);\n\n    const [enterAddress, setEnterAddress] = useState(false);\n    const checkAddressBox = () => setEnterAddress(!enterAddress);\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const data = new FormData(form);\n        const fname = String(data.get('fname') ?? '');\n        const lname = String(data.get('lname') ?? '');\n        const phone = String(data.get('phone') ?? '');\n        const email = String(data.get('email') ?? '');\n        const password = String(data.get('password') ?? '');\n        const cardType = String(data.get('cardType') ?? '');\n        const cardNumber = String(data.get('cardNumber') ?? '');\n        const expMonth = String(data.get('expMonth') ?? '');\n        const expYear = String(data.get('expYear') ?? '');\n        const billingStreet = String(data.get('billingStreet') ?? '');\n        const billingCity = String(data.get('billingCity') ?? '');\n        const billingState = String(data.get('billingState') ?? '');\n        const billingZip = String(data.get('billingZip') ?? '');\n        const street = String(data.get('street') ?? '');\n        const city = String(data.get('city') ?? '');\n        const state = String(data.get('state') ?? '');\n        const zip = String(data.get('zip') ?? '');\n        const promo = Boolean(data.get('promo'));\n\n        let card = new Card(cardType, cardNumber, expMonth, expYear, billingStreet, billingCity, billingState, billingZip);\n        let address = {street, city, state, zip};\n        let user = new User(fname, lname, phone, email, password, promo, address, [card]);\n        if (user.getCards()[0].getCardType() == '') { // if the user didn't enter a card, remove the blank card\n            user.removeCard(0);\n        }\n        handleRegister(user);\n    }\n\n    return (\n  <div className=\"relative min-h-screen flex items-center justify-center bg-[#0b1221] text-white\">\n    <BackgroundReel />\n\n    <div className=\"relative z-10 w-full max-w-2xl p-[1px] rounded-2xl bg-gradient-to-b from-blue-500/60 via-blue-400/20 to-transparent\">\n      <div className=\"bg-[#1b2235]/85 backdrop-blur-md rounded-2xl shadow-2xl border border-gray-700/60 p-8\">\n        <h1 className=\"text-3xl font-semibold text-center mb-2\">Create Account</h1>\n        <p className=\"text-center text-sm text-gray-300 mb-6\">\n          Join <span className=\"font-medium\">Cinema E-Booking</span>\n        </p>\n\n        <form onSubmit={onSubmit} className=\"space-y-6\">\n          {/* Basic info */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"fname\" className=\"block mb-1 text-gray-300\">First name</label>\n              <input\n                id=\"fname\" name=\"fname\" required type=\"text\"\n                className=\"w-full p-3 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                placeholder=\"Jane\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"lname\" className=\"block mb-1 text-gray-300\">Last name</label>\n              <input\n                id=\"lname\" name=\"lname\" required type=\"text\"\n                className=\"w-full p-3 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                placeholder=\"Doe\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"phone\" className=\"block mb-1 text-gray-300\">Phone number</label>\n              <input\n                id=\"phone\" name=\"phone\" required type=\"tel\"\n                className=\"w-full p-3 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                placeholder=\"(555) 555-5555\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"email\" className=\"block mb-1 text-gray-300\">Email</label>\n              <input\n                id=\"email\" name=\"email\" required type=\"email\" autoComplete=\"email\"\n                className=\"w-full p-3 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                placeholder=\"you@example.com\"\n              />\n            </div>\n            <div className=\"md:col-span-2\">\n              <label htmlFor=\"password\" className=\"block mb-1 text-gray-300\">Password</label>\n              <input\n                id=\"password\" name=\"password\" required type=\"password\" autoComplete=\"new-password\"\n                className=\"w-full p-3 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                placeholder=\"••••••••\"\n              />\n            </div>\n          </div>\n\n          {/* Payment toggle */}\n          <div className=\"space-y-3\">\n            <label className=\"inline-flex items-center gap-2 text-gray-300\">\n              <input\n                type=\"checkbox\"\n                name=\"enterCard\"\n                onClick={checkCardBox}\n                className=\"h-4 w-4 rounded border-gray-400 text-blue-500 focus:ring-blue-400\"\n              />\n              Enter payment details?\n            </label>\n\n            {enterCard && (\n              <div className=\"rounded-xl border border-gray-700/60 bg-[#22283b]/50 p-4\">\n                <div className=\"flex gap-6 flex-wrap\">\n                  <label className=\"inline-flex items-center gap-2 text-gray-200\">\n                    <input type=\"radio\" required name=\"cardType\" value=\"debit\" className=\"h-4 w-4\" />\n                    Debit\n                  </label>\n                  <label className=\"inline-flex items-center gap-2 text-gray-200\">\n                    <input type=\"radio\" required name=\"cardType\" value=\"credit\" className=\"h-4 w-4\" />\n                    Credit\n                  </label>\n                </div>\n\n                <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"md:col-span-2\">\n                    <label htmlFor=\"cardNumber\" className=\"block mb-1 text-gray-300\">Card number</label>\n                    <input\n                      id=\"cardNumber\" name=\"cardNumber\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      placeholder=\"4242 4242 4242 4242\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"expMonth\" className=\"block mb-1 text-gray-300\">Exp. month</label>\n                    <input\n                      id=\"expMonth\" name=\"expMonth\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      placeholder=\"MM\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"expYear\" className=\"block mb-1 text-gray-300\">Exp. year</label>\n                    <input\n                      id=\"expYear\" name=\"expYear\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      placeholder=\"YYYY\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"mt-4\">\n                  <p className=\"text-sm text-gray-300 mb-2\">Billing address</p>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"md:col-span-2\">\n                      <label htmlFor=\"billingStreet\" className=\"block mb-1 text-gray-300\">Street</label>\n                      <input\n                        id=\"billingStreet\" name=\"billingStreet\" required type=\"text\"\n                        className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"billingCity\" className=\"block mb-1 text-gray-300\">City</label>\n                      <input\n                        id=\"billingCity\" name=\"billingCity\" required type=\"text\"\n                        className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"billingState\" className=\"block mb-1 text-gray-300\">State</label>\n                      <input\n                        id=\"billingState\" name=\"billingState\" required type=\"text\"\n                        className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"billingZip\" className=\"block mb-1 text-gray-300\">Zip</label>\n                      <input\n                        id=\"billingZip\" name=\"billingZip\" required type=\"text\"\n                        className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Address toggle */}\n          <div className=\"space-y-3\">\n            <label className=\"inline-flex items-center gap-2 text-gray-300\">\n              <input\n                type=\"checkbox\"\n                name=\"enterAddress\"\n                onClick={checkAddressBox}\n                className=\"h-4 w-4 rounded border-gray-400 text-blue-500 focus:ring-blue-400\"\n              />\n              Enter address?\n            </label>\n\n            {enterAddress && (\n              <div className=\"rounded-xl border border-gray-700/60 bg-[#22283b]/50 p-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"md:col-span-2\">\n                    <label htmlFor=\"street\" className=\"block mb-1 text-gray-300\">Street</label>\n                    <input\n                      id=\"street\" name=\"street\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"city\" className=\"block mb-1 text-gray-300\">City</label>\n                    <input\n                      id=\"city\" name=\"city\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"state\" className=\"block mb-1 text-gray-300\">State</label>\n                    <input\n                      id=\"state\" name=\"state\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"zip\" className=\"block mb-1 text-gray-300\">Zip</label>\n                    <input\n                      id=\"zip\" name=\"zip\" required type=\"text\"\n                      className=\"w-full p-3 rounded-md bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Promos */}\n          <label className=\"inline-flex items-center gap-2 text-gray-300\">\n            <input type=\"checkbox\" name=\"promo\" className=\"h-4 w-4 rounded border-gray-400 text-blue-500 focus:ring-blue-400\" />\n            Sign up for promotional emails?\n          </label>\n\n          {/* Submit */}\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2.5 rounded-md transition-all duration-200\"\n          >\n            Register\n          </button>\n        </form>\n\n        <p className=\"text-center mt-6 text-gray-300\">\n          Already have an account?{\" \"}\n          <a href=\"/login\" className=\"text-blue-300 hover:text-blue-200 underline\">\n            Log in\n          </a>\n        </p>\n      </div>\n    </div>\n  </div>\n);\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1102, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/register/page.tsx"],"sourcesContent":["'use client';\nimport RegisterForm from \"@/app/components/RegisterForm\";\nimport User from \"@/types/User\";\n\n// TODO: move this function to its own class to follow SOLID design principles and adhere to MVC framework\nasync function register(user: User) {\n        const userPayload = {\n                firstName: user.getFirstName(),\n                lastName: user.getLastName(),\n                email: user.getEmail(),\n                password: user.getPassword(), // TODO(?): hash password\n                phone: user.getPhoneNumber(),\n                userType: \"CUSTOMER\",\n                userStatus: user.getStatus(),\n\n                homeAddress: {\n                        street: user.getAddress().street,\n                        city: user.getAddress().city,\n                        state: user.getAddress().state,\n                        zip: user.getAddress().zip\n                },\n\n                /* \n                TODO:\n                make this field optional somehow. the user does not need\n                to provide a payment method at registration.\n                as is, this will throw an error if the user did not\n                enter a card.\n                */\n                paymentCard: [{\n                        cardType: user.getCards()[0].getCardType(),\n                        cardNumber: user.getCards()[0].getCardNumber(),\n                        // TODO: expand expDate in the database to expMonth and expYear\n                        expMonth: user.getCards()[0].getExpMonth(),\n                        expYear: user.getCards()[0].getExpYear(),\n                        billingAddress: {\n                                street: user.getCards()[0].getBillingStreet(),\n                                city: user.getCards()[0].getBillingCity(),\n                                state: user.getCards()[0].getBillingState(),\n                                zip: user.getCards()[0].getBillingZip(),\n                        }\n                }], \n\n                // TODO: add orderHistory to the database\n                orderHistory: [],\n                isRegisteredForPromos: user.getPromo(),\n        };\n\n        console.log(\"Attempting to register user with payload:\", userPayload);\n\n        try {\n                const response = await fetch('/api/users', {\n                        method: 'POST',\n                        headers: {\n                                'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(userPayload),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                        console.log(\"Registration successful!\", data);\n                        window.location.href = '/login';\n\n                } else {\n                        console.error(\"Registration failed:\", data.message);\n                }\n\n        } catch (error) {\n                console.error(\"Network or unexpected error during registration:\", error);\n        }\n}\n\nexport default function Register() {\n\n        return (\n                <div>\n                        <RegisterForm handleRegister={register}></RegisterForm>\n                </div>\n        )\n}\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAIA,0GAA0G;AAC1G,eAAe,SAAS,IAAU;IAC1B,MAAM,cAAc;QACZ,WAAW,KAAK,YAAY;QAC5B,UAAU,KAAK,WAAW;QAC1B,OAAO,KAAK,QAAQ;QACpB,UAAU,KAAK,WAAW;QAC1B,OAAO,KAAK,cAAc;QAC1B,UAAU;QACV,YAAY,KAAK,SAAS;QAE1B,aAAa;YACL,QAAQ,KAAK,UAAU,GAAG,MAAM;YAChC,MAAM,KAAK,UAAU,GAAG,IAAI;YAC5B,OAAO,KAAK,UAAU,GAAG,KAAK;YAC9B,KAAK,KAAK,UAAU,GAAG,GAAG;QAClC;QAEA;;;;;;gBAMA,GACA,aAAa;YAAC;gBACN,UAAU,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,WAAW;gBACxC,YAAY,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,aAAa;gBAC5C,+DAA+D;gBAC/D,UAAU,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,WAAW;gBACxC,SAAS,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,UAAU;gBACtC,gBAAgB;oBACR,QAAQ,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,gBAAgB;oBAC3C,MAAM,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,cAAc;oBACvC,OAAO,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,eAAe;oBACzC,KAAK,KAAK,QAAQ,EAAE,CAAC,EAAE,CAAC,aAAa;gBAC7C;YACR;SAAE;QAEF,yCAAyC;QACzC,cAAc,EAAE;QAChB,uBAAuB,KAAK,QAAQ;IAC5C;IAEA,QAAQ,GAAG,CAAC,6CAA6C;IAEzD,IAAI;QACI,MAAM,WAAW,MAAM,MAAM,cAAc;YACnC,QAAQ;YACR,SAAS;gBACD,gBAAgB;YACxB;YACA,MAAM,KAAK,SAAS,CAAC;QAC7B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,SAAS,EAAE,EAAE;YACT,QAAQ,GAAG,CAAC,4BAA4B;YACxC,OAAO,QAAQ,CAAC,IAAI,GAAG;QAE/B,OAAO;YACC,QAAQ,KAAK,CAAC,wBAAwB,KAAK,OAAO;QAC1D;IAER,EAAE,OAAO,OAAO;QACR,QAAQ,KAAK,CAAC,oDAAoD;IAC1E;AACR;AAEe,SAAS;IAEhB,qBACQ,iNAAC;kBACO,cAAA,iNAAC,2KAAY;YAAC,gBAAgB;;;;;;;;;;;AAGtD;KAPwB","debugId":null}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/node_modules/%40swc/helpers/esm/_define_property.js"],"sourcesContent":["function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB,GAAG,EAAE,GAAG,EAAE,KAAK;IACrC,IAAI,OAAO,KAAK;QACZ,OAAO,cAAc,CAAC,KAAK,KAAK;YAAE,OAAO;YAAO,YAAY;YAAM,cAAc;YAAM,UAAU;QAAK;IACzG,OAAO,GAAG,CAAC,IAAI,GAAG;IAElB,OAAO;AACX","ignoreList":[0],"debugId":null}}]
}
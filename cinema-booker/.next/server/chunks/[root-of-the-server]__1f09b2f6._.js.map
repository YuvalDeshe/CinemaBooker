{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\"\nimport CredentialsProvider from \"next-auth/providers/credentials\"\nimport bcrypt from \"bcryptjs\"\n\nconst handler = NextAuth({\n  session: { strategy: \"jwt\" },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.isEmailVerified = user.isEmailVerified;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token && session.user) {\n        session.user.isEmailVerified = token.isEmailVerified;\n      }\n      return session;\n    },\n  },\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        console.log(\" Validating credentials for:\", credentials?.email);\n\n        if (!credentials?.email || !credentials?.password) {\n          console.log(\"Missing credentials.\");\n          return null;\n        }\n\n        const { email, password } = credentials;\n        const trimmedEmail = email.trim();\n\n        let user;\n        try {\n          console.log(`Finding user: \"${trimmedEmail}\"`);\n\n          const apiUrl = process.env.NEXT_PUBLIC_API_DOMAIN\n          const response = await fetch(`${apiUrl}/login`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n          });\n\n          const data = await response.json();\n\n          if (response.ok) {\n            user = data.user;\n          } else {\n            console.error(\"User not found: \", trimmedEmail);\n            return null;\n          }\n\n          if (!user.password) {\n            console.error(` Password field missing for user ${user.email}. Check DB/Schema.`);\n            return null;\n          }\n\n          console.log(` Comparing password for ${user.email}...`);\n          const isPasswordCorrect = await bcrypt.compare(password, user.password);\n\n          if (!isPasswordCorrect) {\n            console.log(` Password incorrect for ${user.email}.`);\n            return null;\n          }\n\n          console.log(` Credentials valid for ${user.email}.`);\n          return {\n            id: user._id.toString(),\n            email: user.email,\n            username: user.username,\n            isEmailVerified: user.isEmailVerified || true,\n          };\n\n        } catch (error) {\n          console.error(\"Network or parsing error during login:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n})\n\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,UAAU,IAAA,sKAAQ,EAAC;IACvB,SAAS;QAAE,UAAU;IAAM;IAC3B,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,eAAe,GAAG,KAAK,eAAe;YAC9C;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,QAAQ,IAAI,EAAE;gBACzB,QAAQ,IAAI,CAAC,eAAe,GAAG,MAAM,eAAe;YACtD;YACA,OAAO;QACT;IACF;IACA,WAAW;QACT,IAAA,yLAAmB,EAAC;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,QAAQ,GAAG,CAAC,gCAAgC,aAAa;gBAEzD,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,QAAQ,GAAG,CAAC;oBACZ,OAAO;gBACT;gBAEA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;gBAC5B,MAAM,eAAe,MAAM,IAAI;gBAE/B,IAAI;gBACJ,IAAI;oBACF,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;oBAE7C,MAAM,SAAS,QAAQ,GAAG,CAAC,sBAAsB;oBACjD,MAAM,WAAW,MAAM,MAAM,GAAG,OAAO,MAAM,CAAC,EAAE;wBAC9C,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM,KAAK,SAAS,CAAC;4BAAE;4BAAO;wBAAS;oBACzC;oBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;oBAEhC,IAAI,SAAS,EAAE,EAAE;wBACf,OAAO,KAAK,IAAI;oBAClB,OAAO;wBACL,QAAQ,KAAK,CAAC,oBAAoB;wBAClC,OAAO;oBACT;oBAEA,IAAI,CAAC,KAAK,QAAQ,EAAE;wBAClB,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,KAAK,KAAK,CAAC,kBAAkB,CAAC;wBAChF,OAAO;oBACT;oBAEA,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC;oBACtD,MAAM,oBAAoB,MAAM,kKAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;oBAEtE,IAAI,CAAC,mBAAmB;wBACtB,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;wBACpD,OAAO;oBACT;oBAEA,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;oBACnD,OAAO;wBACL,IAAI,KAAK,GAAG,CAAC,QAAQ;wBACrB,OAAO,KAAK,KAAK;wBACjB,UAAU,KAAK,QAAQ;wBACvB,iBAAiB,KAAK,eAAe,IAAI;oBAC3C;gBAEF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,0CAA0C;oBACxD,OAAO;gBACT;YACF;QACF;KACD;AACH","debugId":null}}]
}
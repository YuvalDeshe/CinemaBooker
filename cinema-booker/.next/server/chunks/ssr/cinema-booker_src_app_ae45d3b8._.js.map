{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/components/SearchBar.tsx"],"sourcesContent":["import React from \"react\";\n\ntype SearchBarProps = {\n  value: string;\n  onChange: (value: string) => void;\n};\n\nexport default function SearchBar({ value, onChange }: SearchBarProps) {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search movies...\"\n      className=\"mt-2 border rounded px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-black placeholder-black\"\n      value={value}\n      onChange={e => onChange(e.target.value)}\n    />\n  );\n}"],"names":[],"mappings":";;;;;;AAOe,SAAS,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAkB;IACnE,qBACE,kQAAC;QACC,MAAK;QACL,aAAY;QACZ,WAAU;QACV,OAAO;QACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;AAG5C","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/components/GenreDropdown.tsx"],"sourcesContent":["'use client';\n\nimport React, { useRef, useEffect } from \"react\";\n\n// add more genres later if needed or pull from the api if it has them?\nconst GENRES = [\n  \"Action\",\n  \"Adventure\",\n  \"Comedy\",\n  \"Drama\",\n  \"Horror\",\n  \"Romance\",\n  \"Sci-Fi\",\n  \"Thriller\",\n];\n\ntype GenreDropdownProps = {\n  selected: string[];\n  setSelected: (genres: string[]) => void;\n};\n\nexport default function GenreDropdown({ selected, setSelected }: GenreDropdownProps) {\n  const [open, setOpen] = React.useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const toggleGenre = (genre: string) => {\n    setSelected(\n      selected.includes(genre)\n        ? selected.filter((g) => g !== genre)\n        : [...selected, genre]\n    );\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setOpen(false);\n      }\n    }\n    if (open) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [open]);\n\n  // Sort selected genres by their order in GENRES\n  const sortedSelected = GENRES.filter((g) => selected.includes(g));\n\n  return (\n    <div ref={dropdownRef} className=\"relative w-full sm:w-64\">\n      <button\n        className=\"mt-2 border rounded px-4 py-2 w-full text-center bg-blue-700 text-white hover:bg-blue-800 transition\"\n        onClick={() => setOpen((o) => !o)}\n        type=\"button\"\n      >\n        {sortedSelected.length > 0\n          ? sortedSelected.join(\", \")\n          : \"Filter by genre\"}\n      </button>\n      {open && (\n        <div className=\"absolute z-10 mt-2 w-full bg-white border rounded shadow-lg\">\n          {GENRES.map((genre) => (\n            <label\n              key={genre}\n              className=\"flex items-center text-black px-4 py-2 cursor-pointer hover:bg-gray-100\"\n            >\n              <input\n                type=\"checkbox\"\n                checked={selected.includes(genre)}\n                onChange={() => toggleGenre(genre)}\n                className=\"mr-2\"\n              />\n              {genre}\n            </label>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,uEAAuE;AACvE,MAAM,SAAS;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAOc,SAAS,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAsB;IACjF,MAAM,CAAC,MAAM,QAAQ,GAAG,oOAAK,CAAC,QAAQ,CAAC;IACvC,MAAM,cAAc,IAAA,mOAAM,EAAiB;IAE3C,MAAM,cAAc,CAAC;QACnB,YACE,SAAS,QAAQ,CAAC,SACd,SAAS,MAAM,CAAC,CAAC,IAAM,MAAM,SAC7B;eAAI;YAAU;SAAM;IAE5B;IAEA,uCAAuC;IACvC,IAAA,sOAAS,EAAC;QACR,SAAS,mBAAmB,KAAiB;YAC3C,IACE,YAAY,OAAO,IACnB,CAAC,YAAY,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAC1C;gBACA,QAAQ;YACV;QACF;QACA,IAAI,MAAM;YACR,SAAS,gBAAgB,CAAC,aAAa;QACzC,OAAO;YACL,SAAS,mBAAmB,CAAC,aAAa;QAC5C;QACA,OAAO;YACL,SAAS,mBAAmB,CAAC,aAAa;QAC5C;IACF,GAAG;QAAC;KAAK;IAET,gDAAgD;IAChD,MAAM,iBAAiB,OAAO,MAAM,CAAC,CAAC,IAAM,SAAS,QAAQ,CAAC;IAE9D,qBACE,kQAAC;QAAI,KAAK;QAAa,WAAU;;0BAC/B,kQAAC;gBACC,WAAU;gBACV,SAAS,IAAM,QAAQ,CAAC,IAAM,CAAC;gBAC/B,MAAK;0BAEJ,eAAe,MAAM,GAAG,IACrB,eAAe,IAAI,CAAC,QACpB;;;;;;YAEL,sBACC,kQAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,kQAAC;wBAEC,WAAU;;0CAEV,kQAAC;gCACC,MAAK;gCACL,SAAS,SAAS,QAAQ,CAAC;gCAC3B,UAAU,IAAM,YAAY;gCAC5B,WAAU;;;;;;4BAEX;;uBATI;;;;;;;;;;;;;;;;AAgBnB","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/cinema-booker/src/app/components/movie.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"showTimeButtons\": \"movie-module__K7tBrW__showTimeButtons\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/components/Movie.tsx"],"sourcesContent":["'use client';\n\nimport {useRouter} from \"next/navigation\";\nimport React from \"react\";\nimport styles from \"./movie.module.css\";\n\ntype MovieProps = {\n  _id: string;\n  title: string;\n  genre: string[];\n  posterUrl?: string;\n  isCurrentlyRunning: boolean;\n};\n\n// if we ever have to have individual showtimes per movie, replace this with data from MongoDB\nconst SHOWTIMES = [\"9:00 a.m.\", \"12:00 p.m.\", \"3:00 p.m.\", \"6:00 p.m.\", \"9:00 p.m.\"]\n\nexport default function Movie({ _id, title, genre, posterUrl, isCurrentlyRunning }: MovieProps) {\n  const router = useRouter();\n\n  return (\n    <div className=\"border rounded shadow p-4 bg-gray-600 flex flex-col items-center w-48\">\n      <div className=\"w-32 h-48 bg-gray-200 flex items-center justify-center mb-2\">\n        {posterUrl ? (\n          <img src={posterUrl} alt={title} className=\"w-full h-full object-cover rounded\" />\n        ) : (\n          <span className=\"text-gray-500\">No Image</span>\n        )}\n      </div>\n      <h3 className=\"font-semibold text-lg mb-1 text-center\">{title}</h3>\n      <div className=\"text-xs text-white text-center\">{genre}</div>\n      <div className=\"flex flex-col gap-2 w-full mt-4 mb-4\">\n        <a\n          href={`/movie/${_id}`}\n          className=\"w-full\"\n        >\n          <button\n            className=\"w-full px-4 py-2 bg-gray-700 text-white rounded hover:bg-gray-800 transition\"\n            type=\"button\"\n          >\n            Movie Details\n          </button>\n        </a>\n      </div>\n      {isCurrentlyRunning && (<div className=\"text-cs text-white text-center\">\n        <h3>Showtimes:</h3>\n        {SHOWTIMES.map((value, index) => (\n          <button\n            className={styles.showTimeButtons}\n            onClick={() => router.push(`/movie/${_id}/booking?time=${encodeURIComponent(value)}`)}\n            key={`${title} ${index}`}\n          >\n            {value}\n          </button>\n        ))}\n      </div>)}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAJA;;;;AAcA,8FAA8F;AAC9F,MAAM,YAAY;IAAC;IAAa;IAAc;IAAa;IAAa;CAAY;AAErE,SAAS,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,kBAAkB,EAAc;IAC5F,MAAM,SAAS,IAAA,mKAAS;IAExB,qBACE,kQAAC;QAAI,WAAU;;0BACb,kQAAC;gBAAI,WAAU;0BACZ,0BACC,kQAAC;oBAAI,KAAK;oBAAW,KAAK;oBAAO,WAAU;;;;;yCAE3C,kQAAC;oBAAK,WAAU;8BAAgB;;;;;;;;;;;0BAGpC,kQAAC;gBAAG,WAAU;0BAA0C;;;;;;0BACxD,kQAAC;gBAAI,WAAU;0BAAkC;;;;;;0BACjD,kQAAC;gBAAI,WAAU;0BACb,cAAA,kQAAC;oBACC,MAAM,CAAC,OAAO,EAAE,KAAK;oBACrB,WAAU;8BAEV,cAAA,kQAAC;wBACC,WAAU;wBACV,MAAK;kCACN;;;;;;;;;;;;;;;;YAKJ,oCAAuB,kQAAC;gBAAI,WAAU;;kCACrC,kQAAC;kCAAG;;;;;;oBACH,UAAU,GAAG,CAAC,CAAC,OAAO,sBACrB,kQAAC;4BACC,WAAW,4KAAM,CAAC,eAAe;4BACjC,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,cAAc,EAAE,mBAAmB,QAAQ;sCAGnF;2BAFI,GAAG,MAAM,CAAC,EAAE,OAAO;;;;;;;;;;;;;;;;;AAQpC","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/components/MovieList.tsx"],"sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport Movie from \"./Movie\";\n\ntype MovieType = {\n  title: string;\n  genre: string[];\n  posterUrl?: string;\n  isCurrentlyRunning: boolean;\n  _id: string;\n};\n\ntype MovieListProps = {\n  movies: MovieType[];\n};\n\nexport default function MovieList({ movies }: MovieListProps) {\n  return (\n    <section className=\"w-full flex flex-wrap gap-8 justify-center mt-8\">\n      {movies.map((movie) => <Movie title={movie.title} genre={movie.genre} _id={movie._id} posterUrl={movie.posterUrl} isCurrentlyRunning={movie.isCurrentlyRunning} key={movie._id}></Movie>)}\n    </section>\n  );\n}\n// (\n//         <div\n//           className=\"movie-card flex flex-col items-center bg-gray-800 rounded-lg shadow-lg p-4 w-64\"\n//           key={movie._id}\n//         >\n//           <img\n//             src={movie.posterUrl}\n//             alt={movie.title}\n//             className=\"mb-2 w-40 h-60 object-cover rounded\"\n//           />\n//           <h3 className=\"text-lg font-bold text-white\">{movie.title}</h3>\n//           <p className=\"text-gray-300 text-sm mb-2\">\n//             {movie.genre.join(\", \")}\n//           </p>\n//           <div className=\"flex flex-col gap-2 w-full mt-4\">\n//             <a\n//               href={`/movie/${movie._id}`}\n//               className=\"w-full\"\n//             >\n//               <button\n//                 className=\"w-full px-4 py-2 bg-gray-700 text-white rounded hover:bg-gray-800 transition\"\n//                 type=\"button\"\n//               >\n//                 Movie Details\n//               </button>\n//             </a>\n//           </div>\n//         </div>\n//       )"],"names":[],"mappings":";;;;;AAEA;;;AAce,SAAS,UAAU,EAAE,MAAM,EAAkB;IAC1D,qBACE,kQAAC;QAAQ,WAAU;kBAChB,OAAO,GAAG,CAAC,CAAC,sBAAU,kQAAC,iKAAK;gBAAC,OAAO,MAAM,KAAK;gBAAE,OAAO,MAAM,KAAK;gBAAE,KAAK,MAAM,GAAG;gBAAE,WAAW,MAAM,SAAS;gBAAE,oBAAoB,MAAM,kBAAkB;eAAO,MAAM,GAAG;;;;;;;;;;AAGpL,EACA,IAAI;CACJ,eAAe;CACf,wGAAwG;CACxG,4BAA4B;CAC5B,YAAY;CACZ,iBAAiB;CACjB,oCAAoC;CACpC,gCAAgC;CAChC,8DAA8D;CAC9D,eAAe;CACf,4EAA4E;CAC5E,uDAAuD;CACvD,uCAAuC;CACvC,iBAAiB;CACjB,8DAA8D;CAC9D,iBAAiB;CACjB,6CAA6C;CAC7C,mCAAmC;CACnC,gBAAgB;CAChB,wBAAwB;CACxB,2GAA2G;CAC3G,gCAAgC;CAChC,kBAAkB;CAClB,gCAAgC;CAChC,0BAA0B;CAC1B,mBAAmB;CACnB,mBAAmB;CACnB,iBAAiB;CACjB,UAAU","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport GenreDropdown from \"./components/GenreDropdown\";\nimport MovieList from \"./components/MovieList\";\n\n// temporary hard-coded movies. will replace later when the database is up and running\n// const MOVIES = [\n//   { title: \"Inception\", genre: [\"Sci-Fi\", \"Thriller\"], posterUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTmaTHAbTa2MTEGM_PwqBU61jEzjEcQfx-Zb39fyctMdZheq2Uj\" },\n//   { title: \"Titanic\", genre: [\"Romance\", \"Drama\"], posterUrl: \"https://upload.wikimedia.org/wikipedia/en/1/18/Titanic_%281997_film%29_poster.png\" },\n//   { title: \"Get Out\", genre: [\"Horror\", \"Thriller\"], posterUrl: \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcR1wQ2BpfiaW0uOpXSEUmgg-Ea42e1L9PvIJHaoxE_BEawBUaaO\"},\n//   { title: \"Superbad\", genre: [\"Comedy\"], posterUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFIB8fMeJPVNx_aqLjJvTxNa4xpJjE9u_fyLMRV7y8se-HtOC_\" },\n// ];\ntype MovieData = {\n    title: string;\n    genre: string[];\n    posterUrl: string;\n    isCurrentlyRunning: boolean;\n    _id: string;\n};\n\nexport default function Home() {\n  const [search, setSearch] = useState(\"\");\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\n  const [movies, setMovies] = useState<MovieData[]>([]);\n\n  useEffect(() => {\n      const fetchMovies = async () =>   {\n          try {\n              const response = await fetch(\"/api/movies\");\n              if (!response.ok) {\n                  throw new Error(\"Failed to fetch movies.\");\n              }\n              const data = await response.json();\n              setMovies(data);\n          } catch (err) {\n              console.error(err);\n          }\n      };\n      fetchMovies();\n  }, []);\n\n  // temporary filtering as a proof of concept. will replace later when the database is up and running\n  const filteredMovies = movies.filter(movie =>\n    movie.title.toLowerCase().includes(search.toLowerCase()) &&\n    (selectedGenres.length === 0 ||\n      selectedGenres.some(genre => movie.genre.includes(genre)))\n  );\n\n  const currentlyRunning = filteredMovies.filter(m => m.isCurrentlyRunning);\n  const comingSoon = filteredMovies.filter(m => !m.isCurrentlyRunning);\n    // console.log(movies);\n\n    return (\n    <div className=\"font-sans min-h-screen bg-gray-900\">\n      <header className=\"mb-12 flex flex-col sm:flex-row items-center justify-center gap-4 px-8 sm:px-32\">\n        <div className=\"flex-1\">\n          <SearchBar value={search} onChange={setSearch} />\n        </div>\n        <div className=\"w-auto\">\n          <GenreDropdown selected={selectedGenres} setSelected={setSelectedGenres} />\n        </div>\n      </header>\n      <main className=\"px-8 sm:px-32 pb-20\">\n        <section>\n          <h2 className=\"text-white text-2xl font-bold mb-4\">Currently Running</h2>\n          <MovieList movies={currentlyRunning} />\n        </section>\n        <section className=\"mt-12\">\n          <h2 className=\"text-white text-2xl font-bold mb-4\">Coming Soon</h2>\n          <MovieList movies={comingSoon} />\n        </section>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAsBe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,qOAAQ,EAAC;IACrC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,qOAAQ,EAAW,EAAE;IACjE,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,qOAAQ,EAAc,EAAE;IAEpD,IAAA,sOAAS,EAAC;QACN,MAAM,cAAc;YAChB,IAAI;gBACA,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBACd,MAAM,IAAI,MAAM;gBACpB;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,UAAU;YACd,EAAE,OAAO,KAAK;gBACV,QAAQ,KAAK,CAAC;YAClB;QACJ;QACA;IACJ,GAAG,EAAE;IAEL,oGAAoG;IACpG,MAAM,iBAAiB,OAAO,MAAM,CAAC,CAAA,QACnC,MAAM,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW,OACrD,CAAC,eAAe,MAAM,KAAK,KACzB,eAAe,IAAI,CAAC,CAAA,QAAS,MAAM,KAAK,CAAC,QAAQ,CAAC,OAAO;IAG7D,MAAM,mBAAmB,eAAe,MAAM,CAAC,CAAA,IAAK,EAAE,kBAAkB;IACxE,MAAM,aAAa,eAAe,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,kBAAkB;IACjE,uBAAuB;IAEvB,qBACA,kQAAC;QAAI,WAAU;;0BACb,kQAAC;gBAAO,WAAU;;kCAChB,kQAAC;wBAAI,WAAU;kCACb,cAAA,kQAAC,qKAAS;4BAAC,OAAO;4BAAQ,UAAU;;;;;;;;;;;kCAEtC,kQAAC;wBAAI,WAAU;kCACb,cAAA,kQAAC,yKAAa;4BAAC,UAAU;4BAAgB,aAAa;;;;;;;;;;;;;;;;;0BAG1D,kQAAC;gBAAK,WAAU;;kCACd,kQAAC;;0CACC,kQAAC;gCAAG,WAAU;0CAAqC;;;;;;0CACnD,kQAAC,qKAAS;gCAAC,QAAQ;;;;;;;;;;;;kCAErB,kQAAC;wBAAQ,WAAU;;0CACjB,kQAAC;gCAAG,WAAU;0CAAqC;;;;;;0CACnD,kQAAC,qKAAS;gCAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;AAK7B","debugId":null}}]
}
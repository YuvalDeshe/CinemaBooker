{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/nizar/Desktop/software_eng/CinemaBooker/cinema-booker/src/app/login/page.tsx"],"sourcesContent":["function LoginContent() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPw, setShowPw] = useState(false); // added\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const redirectUrl = searchParams.get(\"redirect\");\n  const time = searchParams.get(\"time\");\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      const loginResponse = await fetch(\"/api/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const loginData = await loginResponse.json();\n\n      if (!loginResponse.ok) {\n        if (loginResponse.status === 403 && loginData.requiresVerification) {\n          setError(\"Please verify your email address before logging in. Check your email for a verification link.\");\n        } else if (loginResponse.status === 401) {\n          setError(\"Invalid email or password\");\n        } else {\n          setError(loginData.message || \"Login failed\");\n        }\n        setIsLoading(false);\n        return;\n      }\n\n      const result = await signIn(\"credentials\", { email, password, redirect: false });\n      if (result?.error) {\n        setError(\"Authentication failed. Please try again.\");\n      } else {\n        await getSession();\n        if (redirectUrl) {\n          const finalUrl = time ? `${redirectUrl}?time=${encodeURIComponent(time)}` : redirectUrl;\n          router.push(finalUrl);\n        } else {\n          router.push(\"/\");\n        }\n        router.refresh();\n      }\n    } catch (err) {\n      setError(\"An error occurred during login\");\n      console.error(\"Login error:\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"relative min-h-screen flex items-center justify-center bg-[#0b1221] text-white\">\n      <BackgroundReel />\n\n      <div className=\"relative z-10 w-full max-w-md p-[1px] rounded-2xl bg-gradient-to-b from-blue-500/60 via-blue-400/20 to-transparent\">\n        <div className=\"bg-[#1b2235]/85 backdrop-blur-md rounded-2xl shadow-2xl border border-gray-700/60 p-8\">\n          <h1 className=\"text-3xl font-semibold text-center mb-2\">Login</h1>\n          <p className=\"text-center text-sm text-gray-300 mb-6\">\n            Welcome back to <span className=\"font-medium\">Cinema E-Booking</span>\n          </p>\n\n          {error && (\n            <div className=\"mb-4 rounded-md border border-red-500/60 bg-red-500/10 px-3 py-2 text-sm text-red-200\">\n              {error}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block mb-1 text-gray-300\">\n                Email\n              </label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                required\n                autoComplete=\"email\"\n                className=\"w-full p-3 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block mb-1 text-gray-300\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  type={showPw ? \"text\" : \"password\"}\n                  name=\"password\"\n                  required\n                  autoComplete=\"current-password\"\n                  className=\"w-full p-3 pr-10 rounded-md bg-gray-100 text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                  placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPw((s) => !s)}\n                  className=\"absolute inset-y-0 right-2 my-auto px-2 rounded-md text-gray-700/80 hover:text-gray-900 focus:outline-none\"\n                  aria-label={showPw ? \"Hide password\" : \"Show password\"}\n                  tabIndex={-1}\n                >\n                  {showPw ? \"üôà\" : \"üëÅÔ∏è\"}\n                </button>\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full bg-blue-500 hover:bg-blue-600 disabled:opacity-60 disabled:cursor-not-allowed text-white font-semibold py-2.5 rounded-md transition-all duration-200\"\n            >\n              {isLoading ? \"Logging in‚Ä¶\" : \"Log In\"}\n            </button>\n          </form>\n\n          <p className=\"text-center mt-6 text-gray-300\">\n            Don‚Äôt have an account?{\" \"}\n            <Link href=\"/register\" className=\"text-blue-300 hover:text-blue-200 underline\">\n              Register\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function LoginPage() {\n  return (\n    <Suspense fallback={<div className=\"min-h-screen bg-gray-900 flex items-center justify-center text-white\">Loading...</div>}>\n      <LoginContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
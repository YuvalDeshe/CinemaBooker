{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/johnd/OneDrive/Desktop/Folders/Web%20Dev%20Stuff/CinemaBooker/cinema-booker/src/lib/email.ts"],"sourcesContent":["import nodemailer from 'nodemailer';\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  host: process.env.SMTP_HOST || 'smtp.gmail.com',\r\n  port: parseInt(process.env.SMTP_PORT || '587'),\r\n  secure: process.env.SMTP_SECURE === 'true', // true for 465, false for other ports\r\n  auth: {\r\n    user: process.env.SMTP_USER,\r\n    pass: process.env.SMTP_PASSWORD,\r\n  },\r\n});\r\n\r\nexport interface EmailOptions {\r\n  to: string;\r\n  subject: string;\r\n  text?: string;\r\n  html?: string;\r\n}\r\n\r\nexport async function sendEmail({ to, subject, text, html }: EmailOptions) {\r\n  try {\r\n    const mailOptions = {\r\n      from: process.env.SMTP_FROM || process.env.SMTP_USER,\r\n      to,\r\n      subject,\r\n      text,\r\n      html,\r\n    };\r\n\r\n    const result = await transporter.sendMail(mailOptions);\r\n    console.log('Email sent successfully:', result.messageId);\r\n    return { success: true, messageId: result.messageId };\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n    return { success: false, error: error instanceof Error ? error.message : 'Unknown error' };\r\n  }\r\n}\r\n\r\n// EMAIL VERIFICATION FUNCTIONS\r\nexport function generateVerificationEmailHtml(verificationUrl: string, userEmail: string) {\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>Verify Your Email - Cinema Booker</title>\r\n        <style>\r\n            body {\r\n                font-family: Arial, sans-serif;\r\n                line-height: 1.6;\r\n                color: #333;\r\n                max-width: 600px;\r\n                margin: 0 auto;\r\n                padding: 20px;\r\n                background-color: #f4f4f4;\r\n            }\r\n            .container {\r\n                background: white;\r\n                border-radius: 10px;\r\n                padding: 30px;\r\n                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n            }\r\n            .header {\r\n                text-align: center;\r\n                border-bottom: 2px solid #e74c3c;\r\n                padding-bottom: 20px;\r\n                margin-bottom: 30px;\r\n            }\r\n            .logo {\r\n                font-size: 24px;\r\n                font-weight: bold;\r\n                color: #e74c3c;\r\n                margin-bottom: 10px;\r\n            }\r\n            .button {\r\n                display: inline-block;\r\n                padding: 12px 30px;\r\n                background-color: #e74c3c;\r\n                color: white;\r\n                text-decoration: none;\r\n                border-radius: 5px;\r\n                margin: 20px 0;\r\n                font-weight: bold;\r\n            }\r\n            .button:hover {\r\n                background-color: #c0392b;\r\n            }\r\n            .footer {\r\n                margin-top: 30px;\r\n                padding-top: 20px;\r\n                border-top: 1px solid #eee;\r\n                font-size: 12px;\r\n                color: #666;\r\n                text-align: center;\r\n            }\r\n            .warning {\r\n                background-color: #fff3cd;\r\n                border: 1px solid #ffeaa7;\r\n                color: #856404;\r\n                padding: 15px;\r\n                border-radius: 5px;\r\n                margin: 20px 0;\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class=\"container\">\r\n            <div class=\"header\">\r\n                <div class=\"logo\">Cinema Booker</div>\r\n                <h1>Welcome to Cinema Booker!</h1>\r\n            </div>\r\n            \r\n            <p>Hi there!</p>\r\n            \r\n            <p>Thank you for registering with Cinema Booker! To complete your registration and activate your account, please verify your email address by clicking the button below:</p>\r\n            \r\n            <div style=\"text-align: center;\">\r\n                <a href=\"${verificationUrl}\" class=\"button\">Verify My Email</a>\r\n            </div>\r\n            \r\n            <p>Or copy and paste this link into your browser:</p>\r\n            <p style=\"word-break: break-all; background-color: #f8f9fa; padding: 10px; border-radius: 5px;\">\r\n                ${verificationUrl}\r\n            </p>\r\n            \r\n            <div class=\"warning\">\r\n                <strong>Important:</strong> This verification link will expire in 5 minutes. If you don't verify your email within this time, you'll need to register again.\r\n            </div>\r\n            \r\n            <p>Once you verify your email, you'll be able to:</p>\r\n            <ul>\r\n                <li>Browse and book movie tickets</li>\r\n                <li>Receive promotional offers</li>\r\n                <li>Manage your account settings</li>\r\n            </ul>\r\n            \r\n            <p>If you didn't create an account with Cinema Booker, please ignore this email.</p>\r\n            \r\n            <div class=\"footer\">\r\n                <p>This email was sent to ${userEmail}</p>\r\n                <p>Cinema Booker &copy; 2025. All rights reserved.</p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n\r\n// PROFILE UPDATE FUNCTIONS\r\nexport function generateProfileUpdateEmailHtml(userName: string, updatedFields: string[]) {\r\n  const fieldsText = updatedFields.map(field => {\r\n    // Convert camelCase to readable format\r\n    const readable = field.replace(/([A-Z])/g, ' $1').toLowerCase();\r\n    return readable.charAt(0).toUpperCase() + readable.slice(1);\r\n  }).join(', ');\r\n\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>Profile Updated - Cinema Booker</title>\r\n        <style>\r\n            body {\r\n                font-family: Arial, sans-serif;\r\n                line-height: 1.6;\r\n                color: #333;\r\n                max-width: 600px;\r\n                margin: 0 auto;\r\n                padding: 20px;\r\n                background-color: #f4f4f4;\r\n            }\r\n            .container {\r\n                background: white;\r\n                border-radius: 10px;\r\n                padding: 30px;\r\n                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n            }\r\n            .header {\r\n                text-align: center;\r\n                border-bottom: 2px solid #e74c3c;\r\n                padding-bottom: 20px;\r\n                margin-bottom: 30px;\r\n            }\r\n            .logo {\r\n                font-size: 24px;\r\n                font-weight: bold;\r\n                color: #e74c3c;\r\n                margin-bottom: 10px;\r\n            }\r\n            .success-icon {\r\n                font-size: 48px;\r\n                color: #27ae60;\r\n                margin: 20px 0;\r\n            }\r\n            .field-list {\r\n                background-color: #f8f9fa;\r\n                padding: 15px;\r\n                border-radius: 5px;\r\n                margin: 20px 0;\r\n                border-left: 4px solid #e74c3c;\r\n            }\r\n            .footer {\r\n                margin-top: 30px;\r\n                padding-top: 20px;\r\n                border-top: 1px solid #eee;\r\n                font-size: 12px;\r\n                color: #666;\r\n                text-align: center;\r\n            }\r\n            .security-note {\r\n                background-color: #fff3cd;\r\n                border: 1px solid #ffeaa7;\r\n                color: #856404;\r\n                padding: 15px;\r\n                border-radius: 5px;\r\n                margin: 20px 0;\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class=\"container\">\r\n            <div class=\"header\">\r\n                <div class=\"logo\">Cinema Booker</div>\r\n                <h1>Profile Updated Successfully</h1>\r\n                <div class=\"success-icon\">âœ…</div>\r\n            </div>\r\n            \r\n            <p>Hi ${userName},</p>\r\n            \r\n            <p>Your Cinema Booker profile has been updated successfully. The following information was modified:</p>\r\n            \r\n            <div class=\"field-list\">\r\n                <strong>Updated Fields:</strong> ${fieldsText}\r\n            </div>\r\n            \r\n            <p>These changes were made on ${new Date().toLocaleString()}.</p>\r\n            \r\n            <div class=\"security-note\">\r\n                <strong>Security Notice:</strong> If you did not make these changes, please contact our support team immediately and consider changing your password.\r\n            </div>\r\n            \r\n            <p>Thank you for using Cinema Booker!</p>\r\n            \r\n            <div class=\"footer\">\r\n                <p>Cinema Booker &copy; 2025. All rights reserved.</p>\r\n                <p>This is an automated message, please do not reply to this email.</p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n\r\nexport function generateVerificationEmailText(verificationUrl: string, userEmail: string) {\r\n  return `\r\nWelcome to Cinema Booker!\r\n\r\nThank you for registering with Cinema Booker! To complete your registration and activate your account, please verify your email address by visiting the following link:\r\n\r\n${verificationUrl}\r\n\r\nThis verification link will expire in 5 minutes. If you don't verify your email within this time, you'll need to register again.\r\n\r\nOnce you verify your email, you'll be able to:\r\n- Browse and book movie tickets\r\n- Receive promotional offers\r\n- Manage your account settings\r\n\r\nIf you didn't create an account with Cinema Booker, please ignore this email.\r\n\r\nThis email was sent to ${userEmail}\r\nCinema Booker Â© 2025. All rights reserved.\r\n  `;\r\n}\r\n\r\nexport function generateProfileUpdateEmailText(userName: string, updatedFields: string[]) {\r\n  const fieldsText = updatedFields.map(field => {\r\n    // Convert camelCase to readable format\r\n    const readable = field.replace(/([A-Z])/g, ' $1').toLowerCase();\r\n    return readable.charAt(0).toUpperCase() + readable.slice(1);\r\n  }).join(', ');\r\n\r\n  return `\r\nCinema Booker - Profile Updated\r\n\r\nHi ${userName},\r\n\r\nYour Cinema Booker profile has been updated successfully.\r\n\r\nUpdated Fields: ${fieldsText}\r\n\r\nThese changes were made on ${new Date().toLocaleString()}.\r\n\r\nSECURITY NOTICE: If you did not make these changes, please contact our support team immediately and consider changing your password.\r\n\r\nThank you for using Cinema Booker!\r\n\r\nCinema Booker Â© 2025. All rights reserved.\r\nThis is an automated message, please do not reply to this email.\r\n  `;\r\n}"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAEA,MAAM,cAAc,gMAAU,CAAC,eAAe,CAAC;IAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS,IAAI;IAC/B,MAAM,SAAS,QAAQ,GAAG,CAAC,SAAS,IAAI;IACxC,QAAQ,QAAQ,GAAG,CAAC,WAAW,KAAK;IACpC,MAAM;QACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC3B,MAAM,QAAQ,GAAG,CAAC,aAAa;IACjC;AACF;AASO,eAAe,UAAU,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAgB;IACvE,IAAI;QACF,MAAM,cAAc;YAClB,MAAM,QAAQ,GAAG,CAAC,SAAS,IAAI,QAAQ,GAAG,CAAC,SAAS;YACpD;YACA;YACA;YACA;QACF;QAEA,MAAM,SAAS,MAAM,YAAY,QAAQ,CAAC;QAC1C,QAAQ,GAAG,CAAC,4BAA4B,OAAO,SAAS;QACxD,OAAO;YAAE,SAAS;YAAM,WAAW,OAAO,SAAS;QAAC;IACtD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;YAAE,SAAS;YAAO,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAAgB;IAC3F;AACF;AAGO,SAAS,8BAA8B,eAAuB,EAAE,SAAiB;IACtF,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBA8Ee,EAAE,gBAAgB;;;;;gBAK3B,EAAE,gBAAgB;;;;;;;;;;;;;;;;;0CAiBQ,EAAE,UAAU;;;;;;EAMpD,CAAC;AACH;AAGO,SAAS,+BAA+B,QAAgB,EAAE,aAAuB;IACtF,MAAM,aAAa,cAAc,GAAG,CAAC,CAAA;QACnC,uCAAuC;QACvC,MAAM,WAAW,MAAM,OAAO,CAAC,YAAY,OAAO,WAAW;QAC7D,OAAO,SAAS,MAAM,CAAC,GAAG,WAAW,KAAK,SAAS,KAAK,CAAC;IAC3D,GAAG,IAAI,CAAC;IAER,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAyEQ,EAAE,SAAS;;;;;iDAKoB,EAAE,WAAW;;;0CAGpB,EAAE,IAAI,OAAO,cAAc,GAAG;;;;;;;;;;;;;;;EAetE,CAAC;AACH;AAEO,SAAS,8BAA8B,eAAuB,EAAE,SAAiB;IACtF,OAAO,CAAC;;;;;AAKV,EAAE,gBAAgB;;;;;;;;;;;uBAWK,EAAE,UAAU;;EAEjC,CAAC;AACH;AAEO,SAAS,+BAA+B,QAAgB,EAAE,aAAuB;IACtF,MAAM,aAAa,cAAc,GAAG,CAAC,CAAA;QACnC,uCAAuC;QACvC,MAAM,WAAW,MAAM,OAAO,CAAC,YAAY,OAAO,WAAW;QAC7D,OAAO,SAAS,MAAM,CAAC,GAAG,WAAW,KAAK,SAAS,KAAK,CAAC;IAC3D,GAAG,IAAI,CAAC;IAER,OAAO,CAAC;;;GAGP,EAAE,SAAS;;;;gBAIE,EAAE,WAAW;;2BAEF,EAAE,IAAI,OAAO,cAAc,GAAG;;;;;;;;EAQvD,CAAC;AACH","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/johnd/OneDrive/Desktop/Folders/Web%20Dev%20Stuff/CinemaBooker/cinema-booker/src/app/api/users/%5Bid%5D/route.js"],"sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nimport { sendEmail, generateProfileUpdateEmailHtml, generateProfileUpdateEmailText } from '@/lib/email';\r\n\r\nconst uri = \"mongodb+srv://parkertheoutlaw_db_user:FC6qKAalpje0bIUU@cluster0.levqaeh.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\";\r\nconst SALT_ROUNDS = 10;\r\n\r\nlet client;\r\nlet db;\r\n\r\nasync function connectToDatabase() {\r\n    if (db) {\r\n        return { client, db };\r\n    }\r\n    client = new MongoClient(uri);\r\n    await client.connect();\r\n    db = client.db('UserDatabase');\r\n    return { client, db };\r\n}\r\n\r\nexport async function GET(request, { params }) {\r\n    try {\r\n        const { db } = await connectToDatabase();\r\n        const usersCollection = db.collection('UserCollection');\r\n        const  { id } = await params;\r\n        const user = await usersCollection.findOne({ _id: new ObjectId(id) });\r\n\r\n        if (!user) {\r\n            return new Response(JSON.stringify({ message: \"User not found\" }), {\r\n                status: 404,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n\r\n        const formattedUser = {\r\n            _id: user._id,\r\n            username: user.username,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            email: user.email,\r\n            password: user.password,\r\n            homeAddress: user.homeAddress || { street: \"\", city: \"\", state: \"\", zip: \"\" },\r\n            paymentCard: user.paymentCard || [],\r\n            isRegisteredForPromos: user.isRegisteredForPromos,\r\n            userType: user.userType,\r\n            userStatus: user.userStatus,\r\n        };\r\n\r\n        return new Response(JSON.stringify(formattedUser), {\r\n            status: 200,\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Failed to fetch user:\", error);\r\n        if (error.name === 'BSONTypeError') {\r\n            return new Response(JSON.stringify({ message: \"Invalid User ID format\" }), {\r\n                status: 400,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n        return new Response(JSON.stringify({ message: \"An error occurred.\", error: error.message }), {\r\n            status: 500,\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n}\r\n\r\nexport async function PATCH(request, { params }) {\r\n    try {\r\n        const { db } = await connectToDatabase();\r\n        const usersCollection = db.collection('UserCollection');\r\n        const { id } = await params;\r\n\r\n        if (!ObjectId.isValid(id)) {\r\n            return new Response(JSON.stringify({ message: \"Invalid User ID format\" }), {\r\n                status: 400,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n\r\n        // Get the current user data for email notification\r\n        const currentUser = await usersCollection.findOne({ _id: new ObjectId(id) });\r\n        if (!currentUser) {\r\n            return new Response(JSON.stringify({ message: \"User not found.\" }), {\r\n                status: 404,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n\r\n        const updateData = await request.json();\r\n        const updateDoc = {};\r\n\r\n        if (updateData.firstName) {\r\n            updateDoc.firstName = updateData.firstName;\r\n        }\r\n        if (updateData.lastName) {\r\n            updateDoc.lastName = updateData.lastName;\r\n        }\r\n        if (updateData.homeAddress) {\r\n            updateDoc.homeAddress = updateData.homeAddress;\r\n        }\r\n        if (updateData.isRegisteredForPromos !== undefined) {\r\n            updateDoc.isRegisteredForPromos = updateData.isRegisteredForPromos;\r\n        }\r\n\r\n        // âœ… Fetch existing user from DB\r\n        const user = await usersCollection.findOne({ _id: new ObjectId(id) });\r\n        if (!user) {\r\n            return new Response(JSON.stringify({ error: \"User not found\" }), { status: 404 });\r\n        }\r\n\r\n        if (updateData.password) {\r\n            const isSamePassword = await bcrypt.compare(updateData.password, user.password);\r\n            if (!(isSamePassword || updateData.password === user.password)) {\r\n                console.log(\"PASSWORD UPDATE: Hashing new password using bcrypt.\");\r\n                const salt = await bcrypt.genSalt(10);\r\n                const hashedPassword = await bcrypt.hash(updateData.password, salt);\r\n                updateDoc.password = hashedPassword;\r\n            } else {\r\n                updateDoc.password = user.password;\r\n            }\r\n        }\r\n\r\n        if (updateData.paymentCard) {\r\n           let hashedPaymentCard = [];\r\n            if (Array.isArray(updateData.paymentCard)) {\r\n                hashedPaymentCard = await Promise.all(\r\n                    updateData.paymentCard.map(async card => {\r\n                        if (card.isNew) {\r\n                        // hash the card number if the user added a new card\r\n                        const hashedNumber = await bcrypt.hash(card.cardNumber, SALT_ROUNDS);\r\n                        return {\r\n                            cardType: card.cardType,\r\n                            cardNumber: hashedNumber,\r\n                            expMonth: card.expMonth,\r\n                            expYear: card.expYear,\r\n                            lastFour: card.cardNumber.slice(-4)\r\n                        }\r\n                    } else {\r\n                        // don't rehash the card number if the card is already in the DB\r\n                        return {\r\n                            cardType: card.cardType,\r\n                            cardNumber: card.cardNumber,\r\n                            expMonth: card.expMonth,\r\n                            expYear: card.expYear,\r\n                            lastFour: card.lastFour\r\n                        }\r\n                    }\r\n                    })\r\n                )\r\n                updateDoc.paymentCard = hashedPaymentCard;\r\n            } else {\r\n                return new Response(JSON.stringify({ message: \"paymentCard must be an array.\" }), {\r\n                    status: 400,\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n            }\r\n        }\r\n\r\n        if (Object.keys(updateDoc).length === 0) {\r\n            return new Response(JSON.stringify({ message: \"No valid fields provided for update.\" }), {\r\n                status: 400,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n\r\n        const result = await usersCollection.updateOne(\r\n            { _id: new ObjectId(id) },\r\n            { $set: updateDoc }\r\n        );\r\n\r\n        if (result.matchedCount === 0) {\r\n            return new Response(JSON.stringify({ message: \"User not found.\" }), {\r\n                status: 404,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n\r\n        if (result.modifiedCount === 0) {\r\n            return new Response(JSON.stringify({ message: \"Update successful, but no fields were modified as the values were the same.\" }), {\r\n                status: 200,\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n        }\r\n\r\n        // Send profile update notification email\r\n        const updatedFields = Object.keys(updateDoc);\r\n        const userName = `${currentUser.firstName} ${currentUser.lastName}`;\r\n        \r\n        try {\r\n            const emailResult = await sendEmail({\r\n                to: currentUser.email,\r\n                subject: 'Profile Updated - Cinema Booker',\r\n                text: generateProfileUpdateEmailText(userName, updatedFields),\r\n                html: generateProfileUpdateEmailHtml(userName, updatedFields),\r\n            });\r\n\r\n            if (!emailResult.success) {\r\n                console.error('Failed to send profile update notification:', emailResult.error);\r\n            }\r\n        } catch (emailError) {\r\n            console.error('Error sending profile update notification:', emailError);\r\n            // Don't fail the update if email fails\r\n        }\r\n\r\n        return new Response(JSON.stringify({\r\n            message: \"User updated successfully.\",\r\n            updatedFields: updatedFields\r\n        }), {\r\n            status: 200,\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Failed to update user:\", error);\r\n        return new Response(JSON.stringify({ message: \"An error occurred during update.\", error: error.message }), {\r\n            status: 500,\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}